import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import React, { useEffect, useState, useCallback, useRef } from 'react';

export default function Home() {
	const [ imageFile, setImageFile ] = useState(null);
	const [ isPayblockActive, setIsPayblockActive ] = useState(false);
	let selectedElement;
	let offset;
	let svg;

	const makeDraggable = (evt) => {
		console.log('test', evt);
		svg = evt.target;
	  svg.addEventListener('mousedown', startDrag);
	  svg.addEventListener('mousemove', drag);
	  svg.addEventListener('mouseup', endDrag);
	  svg.addEventListener('mouseleave', endDrag);
	}

	const readURL = () => {
		if (event.target.files && event.target.files[0]) {
			const reader = new FileReader();
			reader.onload = function(e) {
				setImageFile(e.target.result);
			};
			reader.readAsDataURL(event.target.files[0]);
		}
	}

	 const startDrag = (evt) => {
		 console.log('event', evt.target.classList);
		 if (evt.target.classList.contains('imageStyled')) {
			selectedElement = evt.target;
			offset = getMousePosition(evt);
			offset.x -= parseFloat(selectedElement.getAttributeNS(null, "x"));
			offset.y -= parseFloat(selectedElement.getAttributeNS(null, "y"));
		}
	 }

	 const getMousePosition = (evt) => {
			var CTM = svg.getScreenCTM();
			return {
				x: (evt.clientX - CTM.e) / CTM.a,
				y: (evt.clientY - CTM.f) / CTM.d
			};
	 }

	 const drag = (evt) => {
		 if (selectedElement) {
			evt.preventDefault();
			var coord = getMousePosition(evt);
			selectedElement.setAttributeNS(null, "x", coord.x - offset.x);
			selectedElement.setAttributeNS(null, "y", coord.y - offset.y);
		}
	 }

	 const endDrag = (evt) => {
		  selectedElement = null;
	 }

	return (
		<div className={styles.container}>
			<Head>
				<title>Part Blur - Image</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<h1 className={styles.title}>
					Part Blur - Image
				</h1>
				<h2>
					To blur a part of an image
				</h2>
				<p>Upload an image</p>
				<input type="file" onChange={readURL} />
				{/* {isPayblockActive && <img className={styles.imageStyled} id="img" src={imageFile} alt="your image" />} */}
				{!isPayblockActive &&
					<button className={styles.payblock} onClick={() => setIsPayblockActive(true)}>Add Payblock</button>}
				{/* <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 450" width="800pt" height="450pt">
              <image
                width="100%"
                height="100%"
                href={imageFile}
              />
              <defs>
            		<mask id="_mask_pB4Ra2I60T86cut51HZ7BCkqZ7LSdYEe">
            			<path d="M 0 0 L 600 0 L 600 450 L 0 450 L 0 0 Z" style="stroke:black;fill:white;stroke-miterlimit:10;" />
            		</mask>
            		<mask id="_mask_BJfMUC3NRUGzvxmaY8oMfw68uFinikyu">
            			<path d="M 0 0 L 600 0 L 600 450 L 0 450 L 0 0 Z" style="stroke:black;fill:white;stroke-miterlimit:10;" />
            		</mask>
            	</defs>

              <g mask="url(#_mask_BJfMUC3NRUGzvxmaY8oMfw68uFinikyu)"><g mask="url(#_mask_pB4Ra2I60T86cut51HZ7BCkqZ7LSdYEe)" /></g>

              <g mask="url(#_mask_pB4Ra2I60T86cut51HZ7BCkqZ7LSdYEe)">
            		<use xlinkHref="#img_iQDqhiJUKqUepKE6W8dFNkNj1zTAUvgy" transform="matrix(0.3,0,0,0.3,0,0)" preserveAspectRatio="none" style="" />
            	</g>

              <rect className={styles.draggable} x="152" y="47" width="372" height="279" transform="matrix(1,0,0,1,0,0)" id="Mask-added" />

              <clipPath id="clipPath">
            		<rect className={styles.draggable} x="152" y="47" width="372" height="279" transform="matrix(1,0,0,1,0,0)" id="Mask-added" />
            	</clipPath>

              <g clipPath="url(#clipPath)">
            		<defs>
            			<filter id="gBlur" x="-200%" y="-200%" width="400%" height="400%" filterUnits="objectBoundingBox" color-interpolation-filters="sRGB">
            				<feGaussianBlur xmlns="http://www.w3.org/2000/svg" stdDeviation="42" />
            			</filter>
            		</defs>

            		<defs>
            			<filter id="imageFilter" x="-200%" y="-200%" width="400%" height="400%" filterUnits="objectBoundingBox" colorInterpolationFilters="sRGB">
            				<feGaussianBlur xmlns="http://www.w3.org/2000/svg" stdDeviation="42" />
            			</filter>
            			<!-- <mask id="maskId">
            				<path d="M 0 0 L 600 0 L 600 450 L 0 450 L 0 0 Z" style="stroke:black;fill:white;stroke-miterlimit:10;" />
            			</mask>
            			<mask id="maskId2">
            				<path d="M 0 0 L 600 0 L 600 450 L 0 450 L 0 0 Z" style="stroke:black;fill:white;stroke-miterlimit:10;" />
            			</mask> -->
            		</defs>

            		<g filter="url(#imageFilter)">
            			<g mask="url(#maskId2)">
            				<g mask="url(#maskId)" />
            			</g>
            		</g>

                <g filter="url(#imageFilter)">
            			<g mask="url(#maskId)">
            				<use xlinkHref="#imageId"
            					transform="matrix(0.3,0,0,0.3,0,0)"
            					preserveAspectRatio="none"
            				/>
            			</g>
            		</g>

            	</g>
            	<defs>
            		<image
            			width="2000"
            			height="1500"
            			href={imageFile}
            			id="imageId"
            		/>
            	</defs>
            </svg> */
				}
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 450" onLoad={makeDraggable}>
						<defs>
							<filter id="f1" x="0" y="0">
								<feGaussianBlur in="SourceGraphic" stdDeviation="20" />
							</filter>
						</defs>

						<image className="imageStyled" width="100%" height="100%" href={imageFile} />

						<clipPath id="clipPath">
							<rect className="draggable" x="110" y="110" width="150" height="150" fill="white"/>
						</clipPath>

						<g clipPath="url(#clipPath)">
							<image
									className="imageStyled"
	                width="100%"
	                height="100%"
	                href={imageFile}
	                filter="url(#f1)"
	            />
						</g>
					</svg>
			</main>
		</div>
	);
}
